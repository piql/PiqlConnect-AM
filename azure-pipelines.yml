#
# Build pipeline for development versions
trigger:
- main

# Avoid using this pipeline for PR
pr: none

# Build number: 20210112.1-DEV
name: $(Date:yyyyMMdd)$(Rev:.r)

resources:
- repo: self

variables:
  # Environment variables used by docker-compose
  VERSION: '$(build.buildNumber)'
  DOCKER_REGISTRY: '$(dockerRegistryId).azurecr.io'

  # Build Agent VM image
  vmImageName: 'ubuntu-20.04'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:    
    - checkout: self
      submodules: true

    # Verify Docker build agent installation status
    - script: sudo service docker status
      displayName: 'Verify docker installation status'

    # Build container images
    - task: DockerCompose@0
      displayName: Build container images
      inputs:
        action: Build services
        dockerComposeFile: $(Build.SourcesDirectory)/compose/docker-compose.yml

    - task: DockerCompose@0
      displayName: Publish container images
      inputs:
        action: Push services
        azureSubscriptionEndpoint: '$(subscriptionEndpoint)'
        azureContainerRegistry: $(DOCKER_REGISTRY)
        dockerComposeFile: $(Build.SourcesDirectory)/compose/docker-compose.yml
   
    - publish: kube
      artifact: kube
      displayName: Publish Kubernetes manifests

- stage: Deploy
  displayName: Deploy to archivematica environment
  dependsOn: Build

  variables:
  - name: environment
    value: 'Archivematica'
  - name: serviceEndpoint
    value: 'archivematica'
  - name: namespace
    value: 'archivematica'

  - group: 'archivematica.env'

  jobs:
  - deployment: Deploy
    displayName: Deploy Kubernetes resources
    pool:
      vmImage: $(vmImageName)
    environment:
      name: ${{ variables.environment }}
      resourceType: Kubernetes
    strategy:
      runOnce:
        deploy:
          steps:
          - task: qetza.replacetokens.replacetokens-task.replacetokens@3
            displayName: 'Replace tokens in **/*.yml'
            inputs:
              rootDirectory: '$(Pipeline.Workspace)/kube/deployments'
              targetFiles: '**/*.yml'
              escapeType: none  

          - task: qetza.replacetokens.replacetokens-task.replacetokens@3
            displayName: 'Replace tokens in archivematica.env'
            inputs:
              rootDirectory: '$(Pipeline.Workspace)/kube/deployments'
              targetFiles: 'archivematica.env'
              escapeType: none

          - task: Kubernetes@1
            displayName: 'Deploy - Secret - archivematica-settings'
            inputs:
              kubernetesServiceEndpoint: ${{ variables.serviceEndpoint }}
              namespace: $(namespace)
              secretType: generic
              secretArguments: '--from-env-file=archivematica.env'
              secretName: 'archivematica-settings'
              workingDirectory: '$(Pipeline.Workspace)/kube/deployments'  
   
          - task: KubernetesManifest@0
            displayName: Deploy services            
            inputs:
              action: deploy
              kubernetesServiceConnection: ${{ variables.serviceEndpoint }}
              namespace: $(namespace)
              manifests: '$(Pipeline.Workspace)/kube/deployment-*.yml'