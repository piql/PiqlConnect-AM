apiVersion: apps/v1
kind: Deployment
metadata:
  name: archivematica-dashboard
  namespace: '#{namespace}#'
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: archivematica-dashboard
      app.kubernetes.io/instance: '#{namespace}#'
      app.kubernetes.io/part-of: piqlconnect
      app.kubernetes.io/managed-by: azure-devops    
  strategy:
    type: Recreate
  template:
    metadata:     
      labels:
        app.kubernetes.io/name: archivematica-dashboard
        app.kubernetes.io/instance: '#{namespace}#'
        app.kubernetes.io/version: "#{VERSION}#"    
        app.kubernetes.io/part-of: piqlconnect
        app.kubernetes.io/managed-by: azure-devops
    spec:
      securityContext:
        fsGroup: 333
        fsGroupChangePolicy: "OnRootMismatch"
      containers:
        - image: '#{DOCKER_REGISTRY}#/archivematica-dashboard:#{VERSION}#'
          name: archivematica-dashboard      
          securityContext:
            runAsUser: 333
            runAsGroup: 333
          env:
            - name: DJANGO_SETTINGS_MODULE
              value: settings.local
            - name: FORWARDED_ALLOW_IPS
              value: '*'     
            - name: AM_GUNICORN_ACCESSLOG
              value: /dev/null
            - name: AM_GUNICORN_RELOAD
              value: "true"
            - name: AM_GUNICORN_RELOAD_ENGINE
              value: auto
          ports:
          - containerPort: 8000       
          envFrom:
            - secretRef:
                name: archivematica-settings            
          resources: 
            requests:
              memory: "256Mi"
              cpu: "1m"
            limits:
              memory: "512Mi"
              cpu: "250m"
          volumeMounts:
            - mountPath: /var/archivematica/sharedDirectory
              name: archivematica-pipeline-data

      # initContainers:
      #   - image: '#{DOCKER_REGISTRY}#/archivematica-dashboard:#{VERSION}#'
      #     name: archivematica-dashboard-migration          
      #     command: ["/src/dashboard/src/manage.py"]
      #     args: ["migrate", "--noinput"]
      #     envFrom:
      #       - secretRef:
      #           name: archivematica-settings      
      #     env:
      #       - name: DJANGO_SETTINGS_MODULE
      #         value: settings.local
      #       - name: FORWARDED_ALLOW_IPS
      #         value: '*'     
      #       - name: AM_GUNICORN_ACCESSLOG
      #         value: /dev/null
      #       - name: AM_GUNICORN_RELOAD
      #         value: "true"
      #       - name: AM_GUNICORN_RELOAD_ENGINE
      #         value: auto
      #   - image: '#{DOCKER_REGISTRY}#/archivematica-dashboard:#{VERSION}#'
      #     name: archivematica-dashboard-create-superuser          
      #     command: ["/src/dashboard/src/manage.py"]
      #     args: ["install",'--username=#{AM_DASHBOARD_USERNAME}#','--password=#{AM_DASHBOARD_PASSWORD}#','--email=#{AM_DASHBOARD_EMAIL}#','--org-name=#{AM_DASHBOARD_ORG_NAME}#','--org-id=#{AM_DASHBOARD_ORG_ID}#','--api-key=#{AM_DASHBOARD_API_KEY}#','--ss-url=#{AM_SS_URL}#','--ss-user=#{AM_SS_USERNAME}#','--ss-api-key=#{AM_SS_API_KEY}#','--site-url=#{AM_DASHBOARD_SITE_URL}#']
      #     envFrom:
      #       - secretRef:
      #           name: archivematica-settings      
      #     env:
      #       - name: DJANGO_SETTINGS_MODULE
      #         value: settings.local
      #       - name: FORWARDED_ALLOW_IPS
      #         value: '*'     
      #       - name: AM_GUNICORN_ACCESSLOG
      #         value: /dev/null
      #       - name: AM_GUNICORN_RELOAD
      #         value: "true"
      #       - name: AM_GUNICORN_RELOAD_ENGINE
      #         value: auto
            
      restartPolicy: Always
      volumes:      
        - name: archivematica-pipeline-data
          persistentVolumeClaim:
            claimName: '#{namespace}#-pipeline-data-claim'
---
apiVersion: v1
kind: Service
metadata:
  namespace: '#{namespace}#'
  name: archivematica-dashboard
  labels:
    app.kubernetes.io/name: archivematica-dashboard
    app.kubernetes.io/instance: '#{namespace}#'
    app.kubernetes.io/version: "#{VERSION}#"    
    app.kubernetes.io/part-of: piqlconnect
    app.kubernetes.io/managed-by: azure-devops
spec:  
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
  selector:
    app.kubernetes.io/name: archivematica-dashboard
    app.kubernetes.io/instance: '#{namespace}#'
    app.kubernetes.io/version: "#{VERSION}#"    
    app.kubernetes.io/part-of: piqlconnect
    app.kubernetes.io/managed-by: azure-devops
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: '#{namespace}#'
  name: archivematica-dashboard-ingress 
  annotations:
    kubernetes.io/ingress.class: nginx    
    nginx.org/server-snippets: "gzip on;"
    cert-manager.io/cluster-issuer: letsencrypt-prod    
    nginx.ingress.kubernetes.io/ssl-redirect: "true"    
    nginx.ingress.kubernetes.io/whitelist-source-range: "#{AM_DASHBOARD_WHITELIST_SOURCE_RANGE}#"
spec:  
  tls:
  - hosts:
    - '#{am-hostname}#.piqlconnect.com'
    secretName: '#{am-hostname}#-piqlconnect-com-cert'
  rules:
  - host: '#{am-hostname}#.piqlconnect.com'
    http:
      paths:           
      - path: /
        pathType: Prefix
        backend:
          service:
            name: archivematica-dashboard
            port:
              number: 8000