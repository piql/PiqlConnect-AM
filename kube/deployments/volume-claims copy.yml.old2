apiVersion: v1
kind: PersistentVolume
metadata:
  name: '#{namespace}#-pipeline-data'
spec:
  capacity:
    storage: 100Gi
  accessModes:
    - ReadWriteMany
#  csi:
#    driver: file.csi.azure.com
#    readOnly: false
#    volumeHandle: '#{namespace}#-pipeline-data'
#    volumeAttributes:
#      storageAccount: '#{ArchivematicaStorageAccountName}#'
#      resourceGroup: '#{ArchivematicaResourceGroup}#'      
#      secretName: '#{namespace}#-storage-secret-am'
#      secretNamespace: '#{namespace}#'
#      shareName: archivematica-pipeline-data
#      protocol: nfs
  nfs:
    server: '#{ArchivematicaStorageAccountName}#.file.core.windows.net'
    path: '/#{ArchivematicaStorageAccountName}#/archivematica-pipeline-data'
  mountOptions:
    - vers=4
    - minorversion=1
    - sec=sys
    - actimeo=0
  claimRef:
    name: '#{namespace}#-pipeline-data-claim'
    namespace: '#{namespace}#' 
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: '#{namespace}#-pipeline-data-claim'
  namespace: '#{namespace}#'
spec:
  accessModes:
  - ReadWriteMany
  storageClassName: ''
  resources:
    requests:
      storage: 100Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: '#{namespace}#-staging-data'
spec:
  capacity:
    storage: 100Gi
  accessModes:
    - ReadWriteMany
#  csi:
#    driver: file.csi.azure.com
#    readOnly: false
#    volumeHandle: '#{namespace}#-staging-data'
#    volumeAttributes:
#      storageAccount: '#{ArchivematicaStorageAccountName}#'
#      resourceGroup: '#{ArchivematicaResourceGroup}#'      
#      secretName: '#{namespace}#-storage-secret-am'
#      secretNamespace: '#{namespace}#'
#      shareName: archivematica-staging-data
#      protocol: nfs
  nfs:
    server: '#{ArchivematicaStorageAccountName}#.file.core.windows.net'
    path: '/#{ArchivematicaStorageAccountName}#/archivematica-staging-data'
  mountOptions:
    - vers=4
    - minorversion=1
    - sec=sys
    - actimeo=0
  claimRef:
    name: '#{namespace}#-staging-data-claim'
    namespace: '#{namespace}#' 
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: '#{namespace}#-staging-data-claim'
  namespace: '#{namespace}#'
spec:
  accessModes:
  - ReadWriteMany
  storageClassName: ''
  resources:
    requests:
      storage: 100Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: '#{namespace}#-location-data'
spec:
  capacity:
    storage: 100Gi
  accessModes:
    - ReadWriteMany
#  csi:
#    driver: file.csi.azure.com
#    readOnly: false
#    volumeHandle: '#{namespace}#-location-data'
#    volumeAttributes:
#      storageAccount: '#{ArchivematicaStorageAccountName}#'
#      resourceGroup: '#{ArchivematicaResourceGroup}#'      
#      secretName: '#{namespace}#-storage-secret-am'
#      secretNamespace: '#{namespace}#'
#      shareName: archivematica-location-data
#      protocol: nfs
  nfs:
    server: '#{ArchivematicaStorageAccountName}#.file.core.windows.net'
    path: '/#{ArchivematicaStorageAccountName}#/archivematica-location-data'
  mountOptions:
    - vers=4
    - minorversion=1
    - sec=sys
    - actimeo=0  
  claimRef:
    name: '#{namespace}#-location-data-claim'
    namespace: '#{namespace}#' 
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: '#{namespace}#-location-data-claim'
  namespace: '#{namespace}#'
spec:
  accessModes:
  - ReadWriteMany
  storageClassName: ''
  resources:
    requests:
      storage: 100Gi

