apiVersion: v1
kind: ConfigMap
metadata:
  name: archivematica-clamav-env
  namespace: '#{namespace}#'
data:
  CLAMAV_MAX_FILE_SIZE: "2048"
  CLAMAV_MAX_SCAN_SIZE: "2048"
  CLAMAV_MAX_STREAM_LENGTH: "2048"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: archivematica-all
  namespace: '#{namespace}#'
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: archivematica-all
      app.kubernetes.io/instance: '#{namespace}#'
      app.kubernetes.io/part-of: piqlconnect
      app.kubernetes.io/managed-by: azure-devops    
  strategy:
    type: Recreate
  template:
    metadata:     
      labels:
        app.kubernetes.io/name: archivematica-all
        app.kubernetes.io/instance: '#{namespace}#'
        app.kubernetes.io/version: "#{VERSION}#"    
        app.kubernetes.io/part-of: piqlconnect
        app.kubernetes.io/managed-by: azure-devops
    spec:
      securityContext:
        fsGroup: 333
        fsGroupChangePolicy: "OnRootMismatch"
      containers:
        - image: '#{DOCKER_REGISTRY}#/archivematica-storage-service:#{VERSION}#'
          name: archivematica-storage-service
          securityContext:
            runAsUser: 333
            runAsGroup: 333
          env:
            - name: SS_GUNICORN_BIND
              value: 0.0.0.0:8002
            - name: DJANGO_SETTINGS_MODULE
              value: storage_service.settings.local
            - name: FORWARDED_ALLOW_IPS
              value: '*'        
            - name: SS_GNUPG_HOME_PATH
              value: /var/archivematica/storage_service/.gnupg
            - name: SS_GUNICORN_ACCESSLOG
              value: /dev/null
            - name: SS_GUNICORN_RELOAD
              value: "true"
            - name: SS_GUNICORN_RELOAD_ENGINE
              value: auto
          ports:
          - containerPort: 8002         
          envFrom:
            - secretRef:
                name: archivematica-settings
          resources: 
            requests:
              memory: "256Mi"
              cpu: "1m"
            limits:
              memory: "2048Mi"
              cpu: "1000m"
          volumeMounts:
            - mountPath: /var/archivematica/sharedDirectory
              name: archivematica-pipeline-data
            - mountPath: /var/archivematica/storage_service
              name: archivematica-staging-data
            - mountPath: /home
              name: archivematica-location-data
              subPath: sips
            - mountPath: /home/transfer
              name: transfer-share
            - mountPath: /data/storage
              name: storage-share
        
        - image: '#{DOCKER_REGISTRY}#/archivematica-dashboard:#{VERSION}#'
          name: archivematica-dashboard      
          securityContext:
            runAsUser: 333
            runAsGroup: 333
          env:
            - name: AM_GUNICORN_BIND 
              value: 0.0.0.0:8001
            - name: DJANGO_SETTINGS_MODULE
              value: settings.local
            - name: FORWARDED_ALLOW_IPS
              value: '*'     
            - name: AM_GUNICORN_ACCESSLOG
              value: /dev/null
            - name: AM_GUNICORN_RELOAD
              value: "true"
            - name: AM_GUNICORN_RELOAD_ENGINE
              value: auto
          ports:
          - containerPort: 8001              
          envFrom:
            - secretRef:
                name: archivematica-settings            
          resources: 
            requests:
              memory: "256Mi"
              cpu: "1m"
            limits:
              memory: "2048Mi"
              cpu: "1000m"
          volumeMounts:
            - mountPath: /var/archivematica/sharedDirectory
              name: archivematica-pipeline-data
            - mountPath: /home/transfer
              name: transfer-share

        - image: '#{DOCKER_REGISTRY}#/archivematica-mcp-client:#{VERSION}#'
          name: archivematica-mcp-client
          securityContext:
            runAsUser: 333
            runAsGroup: 333
          env:      
            - name: ARCHIVEMATICA_MCPCLIENT_MCPCLIENT_CAPTURE_CLIENT_SCRIPT_OUTPUT
              value: "true"           
            - name: ARCHIVEMATICA_MCPCLIENT_MCPCLIENT_CLAMAV_CLIENT_MAX_FILE_SIZE
              value: "2048"
            - name: ARCHIVEMATICA_MCPCLIENT_MCPCLIENT_CLAMAV_CLIENT_MAX_SCAN_SIZE
              value: "2048"
            - name: ARCHIVEMATICA_MCPCLIENT_MCPCLIENT_CLAMAV_CLIENT_MAX_STREAM_LENGTH
              value: "2048"
            - name: DJANGO_SECRET_KEY
              value: "12345"
            - name: DJANGO_SETTINGS_MODULE
              value: settings.common           
          envFrom:
            - secretRef:
                name: archivematica-settings       
          resources: 
            requests:
              memory: "256Mi"
              cpu: "1m"
            limits:
              memory: "2048Mi"
              cpu: "1000m"
          volumeMounts:
            - mountPath: /var/archivematica/sharedDirectory
              name: archivematica-pipeline-data
            - mountPath: /home/transfer
              name: transfer-share

        - image: '#{DOCKER_REGISTRY}#/archivematica-mcp-server:#{VERSION}#'
          name: archivematica-mcp-server
          securityContext:
            runAsUser: 333
            runAsGroup: 333        
          env:            
            - name: DJANGO_SECRET_KEY
              value: "12345"
            - name: DJANGO_SETTINGS_MODULE
              value: settings.common
          envFrom:
            - secretRef:
                name: archivematica-settings   
          resources: 
            requests:
              memory: "256Mi"
              cpu: "1m"
            limits:
              memory: "2048Mi"
              cpu: "1000m"
          volumeMounts:          
            - mountPath: /var/archivematica/sharedDirectory
              name: archivematica-pipeline-data
            - mountPath: /home/transfer
              name: transfer-share
             
        - image: artefactual/clamav:latest
          name: clamavd
          ports:
            - containerPort: 3310
          env:
            - name: CLAMAV_MAX_FILE_SIZE
              valueFrom:
                configMapKeyRef:
                  key: CLAMAV_MAX_FILE_SIZE
                  name: archivematica-clamav-env
            - name: CLAMAV_MAX_SCAN_SIZE
              valueFrom:
                configMapKeyRef:
                  key: CLAMAV_MAX_SCAN_SIZE
                  name: archivematica-clamav-env
            - name: CLAMAV_MAX_STREAM_LENGTH
              valueFrom:
                configMapKeyRef:
                  key: CLAMAV_MAX_STREAM_LENGTH
                  name: archivematica-clamav-env
        
          resources: 
            requests:
              memory: "256Mi"
              cpu: "1m"
            limits:
              memory: "2048Mi"
              cpu: "1000m"

          volumeMounts:
            - mountPath: /var/archivematica/sharedDirectory
              name: archivematica-pipeline-data
              readOnly: true

        - image: artefactual/fits-ngserver:0.8.4
          name: archivematica-fits
          ports:
            - containerPort: 2113
          resources:
            requests:
              memory: "256Mi"
              cpu: "1m"
            limits:
              memory: "2048Mi"
              cpu: "1000m"
          volumeMounts:
            - mountPath: /var/archivematica/sharedDirectory
              name: archivematica-pipeline-data

      initContainers:
        - image: '#{DOCKER_REGISTRY}#/archivematica-storage-service:#{VERSION}#'
          name: archivematica-storage-service-migrations
          command: ["/src/storage_service/manage.py"]
          args: ["migrate", "--noinput"]
          envFrom:
            - secretRef:
                name: archivematica-settings
          env:          
            - name: DJANGO_SETTINGS_MODULE
              value: storage_service.settings.local
            - name: FORWARDED_ALLOW_IPS
              value: '*'        
            - name: SS_GNUPG_HOME_PATH
              value: /var/archivematica/storage_service/.gnupg
            - name: SS_GUNICORN_ACCESSLOG
              value: /dev/null
            - name: SS_GUNICORN_RELOAD
              value: "true"
            - name: SS_GUNICORN_RELOAD_ENGINE
              value: auto

        - image: '#{DOCKER_REGISTRY}#/archivematica-storage-service:#{VERSION}#'
          name: archivematica-storage-service-create-user
          command: ["/src/storage_service/manage.py"]
          args: ['create_user', '--username=#{AM_SS_USERNAME}#', '--password=#{AM_SS_PASSWORD}#', '--email=#{AM_SS_EMAIL}#', '--api-key=#{AM_SS_API_KEY}#', '--superuser']
          envFrom:
            - secretRef:
                name: archivematica-settings
          env:
            - name: DJANGO_SETTINGS_MODULE
              value: storage_service.settings.local
            - name: FORWARDED_ALLOW_IPS
              value: '*'        
            - name: SS_GNUPG_HOME_PATH
              value: /var/archivematica/storage_service/.gnupg
            - name: SS_GUNICORN_ACCESSLOG
              value: /dev/null
            - name: SS_GUNICORN_RELOAD
              value: "true"
            - name: SS_GUNICORN_RELOAD_ENGINE
              value: auto

        - image: '#{DOCKER_REGISTRY}#/archivematica-dashboard:#{VERSION}#'
          name: archivematica-dashboard-migration          
          command: ["/src/dashboard/src/manage.py"]
          args: ["migrate", "--noinput"]
          envFrom:
            - secretRef:
                name: archivematica-settings      
          env:          
            - name: DJANGO_SETTINGS_MODULE
              value: settings.local
            - name: FORWARDED_ALLOW_IPS
              value: '*'     
            - name: AM_GUNICORN_ACCESSLOG
              value: /dev/null
            - name: AM_GUNICORN_RELOAD
              value: "true"
            - name: AM_GUNICORN_RELOAD_ENGINE
              value: auto
            
      restartPolicy: Always
      nodeSelector:
        kubernetes.io/os: linux
        
      volumes:      
        - name: archivematica-pipeline-data
          persistentVolumeClaim:
            claimName: '#{namespace}#-pipeline-data-claim'        
        - name: archivematica-staging-data
          persistentVolumeClaim:
            claimName: '#{namespace}#-staging-data-claim'
        - name: archivematica-location-data
          persistentVolumeClaim:
            claimName: '#{namespace}#-location-data-claim'
        - name: transfer-share
          persistentVolumeClaim:
            claimName: '#{namespace}#-transfer-claim'
        - name: storage-share
          persistentVolumeClaim:
            claimName: '#{namespace}#-storage-claim'
---
apiVersion: v1
kind: Service
metadata:
  namespace: '#{namespace}#'
  name: archivematica-clamavd
  labels:
    app.kubernetes.io/name: archivematica-clamavd
    app.kubernetes.io/instance: '#{namespace}#'
    app.kubernetes.io/version: "#{VERSION}#"    
    app.kubernetes.io/part-of: piqlconnect
    app.kubernetes.io/managed-by: azure-devops
spec:
  type: ClusterIP
  ports:
    - port: 3310
      targetPort: 3310
  selector:
    app.kubernetes.io/name: archivematica-all
    app.kubernetes.io/instance: '#{namespace}#'
    app.kubernetes.io/version: "#{VERSION}#"    
    app.kubernetes.io/part-of: piqlconnect
    app.kubernetes.io/managed-by: azure-devops
---
apiVersion: v1
kind: Service
metadata:
  namespace: '#{namespace}#'
  name: archivematica-fits
  labels:
    app.kubernetes.io/name: archivematica-fits
    app.kubernetes.io/instance: '#{namespace}#'
    app.kubernetes.io/version: "#{VERSION}#"    
    app.kubernetes.io/part-of: piqlconnect
    app.kubernetes.io/managed-by: azure-devops 
spec:
  type: ClusterIP
  ports:
  - port: 2113
    targetPort: 2113
  selector:
    app.kubernetes.io/name: archivematica-all
    app.kubernetes.io/instance: '#{namespace}#'
    app.kubernetes.io/version: "#{VERSION}#"    
    app.kubernetes.io/part-of: piqlconnect
    app.kubernetes.io/managed-by: azure-devops 
---
apiVersion: v1
kind: Service
metadata:
  namespace: '#{namespace}#'
  name: archivematica-dashboard
  labels:
    app.kubernetes.io/name: archivematica-dashboard
    app.kubernetes.io/instance: '#{namespace}#'
    app.kubernetes.io/version: "#{VERSION}#"    
    app.kubernetes.io/part-of: piqlconnect
    app.kubernetes.io/managed-by: azure-devops
spec:  
  type: ClusterIP
  ports:
  - port: 8001
    targetPort: 8001
  selector:
    app.kubernetes.io/name: archivematica-all
    app.kubernetes.io/instance: '#{namespace}#'
    app.kubernetes.io/version: "#{VERSION}#"    
    app.kubernetes.io/part-of: piqlconnect
    app.kubernetes.io/managed-by: azure-devops
---
apiVersion: v1
kind: Service
metadata:
  namespace: '#{namespace}#' 
  name: 'archivematica-mcp-client'
  labels:
    app.kubernetes.io/name: archivematica-mcp-client
    app.kubernetes.io/instance: '#{namespace}#'
    app.kubernetes.io/version: "#{VERSION}#"    
    app.kubernetes.io/part-of: piqlconnect
    app.kubernetes.io/managed-by: azure-devops
spec:  
  type: ClusterIP
  ports:
  - port: 8000
    name: http-port
    protocol: TCP
    targetPort: 8000 
  selector:
    app.kubernetes.io/name: archivematica-all
    app.kubernetes.io/instance: '#{namespace}#'
    app.kubernetes.io/version: "#{VERSION}#"    
    app.kubernetes.io/part-of: piqlconnect
    app.kubernetes.io/managed-by: azure-devops
---
apiVersion: v1
kind: Service
metadata:
  namespace: '#{namespace}#'
  name: archivematica-storage-service
  labels:
    app.kubernetes.io/name: archivematica-storage-service
    app.kubernetes.io/instance: '#{namespace}#'
    app.kubernetes.io/version: "#{VERSION}#"    
    app.kubernetes.io/part-of: piqlconnect
    app.kubernetes.io/managed-by: azure-devops
spec:  
  type: ClusterIP
  ports:
  - port: 8002
    targetPort: 8002
  selector:
    app.kubernetes.io/name: archivematica-all
    app.kubernetes.io/instance: '#{namespace}#'
    app.kubernetes.io/version: "#{VERSION}#"    
    app.kubernetes.io/part-of: piqlconnect
    app.kubernetes.io/managed-by: azure-devops
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: '#{namespace}#'
  name: archivematica-dashboard-ingress 
  annotations:
    kubernetes.io/ingress.class: nginx    
    nginx.org/server-snippets: "gzip on;"
    cert-manager.io/cluster-issuer: letsencrypt-prod    
    nginx.ingress.kubernetes.io/ssl-redirect: "true"    
    nginx.ingress.kubernetes.io/whitelist-source-range: "#{AM_DASHBOARD_WHITELIST_SOURCE_RANGE}#"
spec:  
  tls:
  - hosts:
    - '#{am-hostname}#.piqlconnect.com'
    secretName: '#{am-hostname}#-piqlconnect-com-cert'
  rules:
  - host: '#{am-hostname}#.piqlconnect.com'
    http:
      paths:           
      - path: /
        pathType: Prefix
        backend:
          service:
            name: archivematica-dashboard
            port:
              number: 8001
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: '#{namespace}#'
  name: archivematica-storage-service-ingress 
  annotations:
    kubernetes.io/ingress.class: nginx    
    nginx.org/server-snippets: "gzip on;"
    cert-manager.io/cluster-issuer: letsencrypt-prod    
    nginx.ingress.kubernetes.io/ssl-redirect: "true"    
    nginx.ingress.kubernetes.io/whitelist-source-range: "#{AM_SS_WHITELIST_SOURCE_RANGE}#"
spec:  
  tls:
  - hosts:
    - '#{amss-hostname}#.piqlconnect.com'
    secretName: '#{amss-hostname}#-piqlconnect-com-cert'
  rules:
  - host: '#{amss-hostname}#.piqlconnect.com'
    http:
      paths:           
      - path: /
        pathType: Prefix
        backend:
          service:
            name: archivematica-storage-service
            port:
              number: 8002



